ErrorToTruthCurrent<-(sum(( PredictedValuesCurrent - as.matrix(test.truth))^2))/n.test
MinErrorLambda
Model$lambdas
ErrorToTruthCurrent
lambda.num<-which(Model$errorU.lambdas==min(Model$errorU.lambdas))
MinErrorLambda<-Model$lambdas[lambda.num]
PredictedValuesCurrent<-predict(object=Model$fits[[lambda.num]],newdata=test.data)
ErrorToTruthCurrent<-(sum(( PredictedValuesCurrent - as.matrix(test.truth))^2))/n.test
MinErrorLambda
ErrorToTruthCurrent
lambda.num<-which(Model$error.lambdas==min(Model$error.lambdas))
MinErrorLambda<-Model$lambdas[lambda.num]
PredictedValuesCurrent<-predict(object=Model$fits[[lambda.num]],newdata=test.data)
ErrorToTruthCurrent<-(sum(( PredictedValuesCurrent - as.matrix(test.truth))^2))/n.test
MinErrorLambda
ErrorToTruthCurrent
model<-cmdArg(model="sim1")
tag <-cmdArg(tag="500")
n.training <- cmdArg(n.training=500L)
n.test <- cmdArg(n.test=1000L)
n.simulations <- cmdArg(n.simulations=500L)
name <- paste("data/",model,"_",tag,"_",sep="")
CompositeDC <- paste("CompositeDC/",model,"_",tag,"_",sep="")
system.time(Model<-composite.rpart(dat=training.data.all,n.grid=100,uplim=20,outvar="training.y"))
Model$lambdas
lambda.num<-which(Model$error.lambdas==min(Model$error.lambdas))
lambda.num
MinErrorLambda<-Model$lambdas[lambda.num]
MinErrorLambda
PredictedValuesCurrent
PredictedValuesCurrent<-predict(object=Model$fits[[lambda.num]],newdata=test.data)
ErrorToTruthCurrent<-(sum(( PredictedValuesCurrent - as.matrix(test.truth))^2))/n.test
ErrorToTruthCurrent
Model$error.lambdas
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")
compdc.error.500.uplim.lambda
read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")
compdc.error.500.uplim.lambda
getwd(_)
getwd()
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
library(Gmisc) # tables for knitr
library(survival)
library(xtable)
require(plyr)
library(stargazer)
source("/Users/annettemolinaro/Box Sync/Projects/PI/Margaret and John's lab/Subgroup Paper with Jeanette/UCSF Data/partDSA Model/All Grades/TableFunctions.R")
setwd("/Users/annettemolinaro/Box Sync/Secure-annette.molinaro@ucsf.edu/Clinical Trials/Nick/MGMT")
dat<-read.csv(file="MGMT database updated 2017.csv")
dat<-read.csv(file="MGMT database updated 2017.csv")
at[1,]
table(dat$Progression.Recurrence..yes.no.)
table(dat$Death..yes.no.)
OS.time<-ifelse(!is.na(as.Date(dat$Death.Date, "%m/%d/%y")),
as.Date(dat$Death.Date, "%m/%d/%y")- as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"),
as.Date(dat$Last.Followup, "%m/%d/%y") - as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"))
PFS.time<-ifelse(dat$Progression.Recurrence..yes.no.=="Yes",
as.Date(dat$Date.of.first.Progression, "%m/%d/%y")- as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"),
as.Date(dat$Last.Followup, "%m/%d/%y") - as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"))
PFS.time<-ifelse(dat$Progression.Recurrence..yes.no.!="Yes" & dat$Death..yes.no. == "Yes",
as.Date(dat$Death.Date, "%m/%d/%y")- as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"),
PFS.time)
dat<-cbind(dat,OS.time,PFS.time)
library(survival)
dat$Censored_PFS_NEW <- as.numeric(dat$Progression.Recurrence..yes.no.=="Yes")
dat$Censored_OS_NEW <- as.numeric(dat$Death..yes.no.=="Yes")
summary(x1<-survfit(Surv(OS.time,Censored_OS_NEW)~1,data=dat))
x1
dat[1,]
summary(mgmt2.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Methylation.status,data=dat))
mgmt2.pfs
survfit(Surv(OS.time,Censored_OS_NEW)~Methylation.status,data=dat)
x2survfit(Surv(OS.time,Censored_OS_NEW)~Methylation.status,data=dat)
x2<-survfit(Surv(OS.time,Censored_OS_NEW)~Methylation.status,data=dat)
plot(x2)
summary(x2)
plot(x2,xscale = 365.5)
dim(dat)
x1<-survfit(Surv(OS.time,Censored_OS_NEW)~1,data=dat)
x1
466/365.5
3*365.5
summary(x1)
Model$error.lambdas
Model
lambda.num<-which(Model$error.lambdas==min(Model$error.lambdas))
MinErrorLambda<-Model$lambdas[lambda.num]
MinErrorLambda
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")
compdc.error.500.uplim.lambda
View(compdc.error.500.uplim.lambda)
dim(compdc.error.500.uplim.lambda)
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")[1:500,]
compdc.error.500.uplim.lambda
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
compthirds.error.500.uplim.lambda
compRob.CVerror.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.txt")
compRob.CVerror.500.uplim.lambda
source("/Users/annettemolinaro/Box Sync/Projects/PI/Margaret and John's lab/Subgroup Paper with Jeanette/UCSF Data/partDSA Model/All Grades/TableFunctions.R")
setwd("/Users/annettemolinaro/Box Sync/Secure-annette.molinaro@ucsf.edu/Clinical Trials/Nick/MGMT")
dat<-read.csv(file="~/Desktop/Data/MGMT database updated 2017.csv")
dat<-read.csv(file="~/Desktop/Data/MGMT database updated 2017.csv")
setwd("~/Desktop/Data")
library(Gmisc) # tables for knitr
library(survival)
library(xtable)
require(plyr)
library(stargazer)
source("/Users/annettemolinaro/Box Sync/Projects/PI/Margaret and John's lab/Subgroup Paper with Jeanette/UCSF Data/partDSA Model/All Grades/TableFunctions.R")
setwd("/Users/annettemolinaro/Box Sync/Secure-annette.molinaro@ucsf.edu/Clinical Trials/Nick/MGMT")
dat<-read.csv(file="~/Desktop/Data/MGMT database updated 2017.csv")
dat[1,]
dat<-dat[which(!is.na(dat$MGMT.score)),]
table(dat$Progression.Recurrence..yes.no.)
table(dat$Death..yes.no.)
OS.time<-ifelse(!is.na(as.Date(dat$Death.Date, "%m/%d/%y")),
as.Date(dat$Death.Date, "%m/%d/%y")- as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"),
as.Date(dat$Last.Followup, "%m/%d/%y") - as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"))
PFS.time<-ifelse(dat$Progression.Recurrence..yes.no.=="Yes",
as.Date(dat$Date.of.first.Progression, "%m/%d/%y")- as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"),
as.Date(dat$Last.Followup, "%m/%d/%y") - as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"))
PFS.time<-ifelse(dat$Progression.Recurrence..yes.no.!="Yes" & dat$Death..yes.no. == "Yes",
as.Date(dat$Death.Date, "%m/%d/%y")- as.Date(dat$Date.of.Diagnosis, "%m/%d/%y"),
PFS.time)
dat<-cbind(dat,OS.time,PFS.time)
#Accessing Survival Package#
library(survival)
dat$Censored_PFS_NEW <- as.numeric(dat$Progression.Recurrence..yes.no.=="Yes")
dat$Censored_OS_NEW <- as.numeric(dat$Death..yes.no.=="Yes")
survfit(OS.time)
write.table(dat,file="TrainingSetMGMT.csv",sep=",")
#Model information
summary(age.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Age,data=dat))
dat$KPS_cat<-ifelse(dat$KPS<=70,"<=70",ifelse(dat$KPS==80,"80",">=90"))
summary(kps.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~KPS_cat,data=dat))
dat$KPS_cat2<-ifelse(dat$KPS<=70,"<=70",">=80")
dat$KPS_cat80<-ifelse(dat$KPS<=80,"<=80",">=90")
summary(kps2.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~KPS_cat80,data=dat))
summary(mgmt.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.score,data=dat))
dat$mgmt.score.cat<-ifelse(dat$MGMT.score==0,"0 Unmeth",ifelse(dat$MGMT.score<=6,"Low 1-6","High 7+"))
summary(mgmt.cat.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~mgmt.score.cat,data=dat))
dat$mgmt.score.cat2<-relevel(factor(dat$mgmt.score.cat),ref="Low 1-6")
summary(mgmt.cat2.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~mgmt.score.cat2,data=dat))
summary(mgmt2.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Methylation.status,data=dat))
table(dat$Gender)
dat$Gender<-ifelse(dat$Gender=="m"|dat$Gender=="M","M","F")
summary(gender.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Gender,data=dat))
table(dat$Extent.of.Resection..GTR..STR..bx.)
dat$Extent.of.Resection..GTR..STR..bx.2<-ifelse(dat$Extent.of.Resection..GTR..STR..bx.=="?GTR?"|
dat$Extent.of.Resection..GTR..STR..bx.=="",NA,
ifelse(dat$Extent.of.Resection..GTR..STR..bx.=="bx","BX",
ifelse(dat$Extent.of.Resection..GTR..STR..bx.=="STR","STR","GTR")))
table(dat$Extent.of.Resection..GTR..STR..bx.2)
dat$EOR2<-relevel(factor(dat$Extent.of.Resection..GTR..STR..bx.2),ref="GTR")
table(dat$EOR2)
summary(eor2.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~EOR2,data=dat))
dat$EOR3<-ifelse(dat$EOR2 =="STR"|dat$EOR2 =="GTR","GTR","BX")
table(dat$EOR3)
dat$EOR3<-relevel(factor(dat$EOR3),ref="GTR")
summary(eor3.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~EOR3,data=dat))
summary(m1<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Age + KPS_cat80 + MGMT.score  + Gender + EOR2 ,data=dat))
summary(m2<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Age + KPS + MGMT.score +
Methylation.status + Gender ,data=dat))
summary(m3<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Age + KPS + MGMT.score
+ Gender + EOR2,data=dat))
summary(m4<-coxph(Surv(PFS.time,Censored_PFS_NEW)~Age +  MGMT.score
,data=dat))
MGMT.names<-NULL
MGMT.vals<-matrix(0,nrow=nrow(dat),ncol=17)
for (i in (min(dat$MGMT.score,na.rm=T)+1):(max(dat$MGMT.score,na.rm=T))){
MGMT.vals[,i]<-as.numeric(dat$MGMT.score>=i)
MGMT.names<-c(MGMT.names,paste("MGMT.",i,sep=""))
}
colnames(MGMT.vals)<-MGMT.names
dat<-cbind(dat,MGMT.vals)
Cox.X1=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.1,data=dat,y=TRUE)
Cox.X2 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.2,data=dat,y=TRUE)
Cox.X3 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.3,data=dat,y=TRUE)
Cox.X4 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.4,data=dat,y=TRUE )
Cox.X5 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.5,data=dat,y=TRUE )
Cox.X6 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.6,data=dat,y=TRUE )
Cox.X7 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.7,data=dat,y=TRUE )
Cox.X8 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.8,data=dat,y=TRUE )
Cox.X9 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.9,data=dat,y=TRUE )
Cox.X10 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.10,data=dat,y=TRUE )
Cox.X11 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.11,data=dat,y=TRUE )
Cox.X12 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.12,data=dat,y=TRUE )
Cox.X13 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.13,data=dat,y=TRUE )
Cox.X14 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.14,data=dat,y=TRUE )
Cox.X15 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.15,data=dat,y=TRUE )
Cox.X16 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.16,data=dat,y=TRUE )
Cox.X17 =coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.17,data=dat,y=TRUE)
survfit(Surv(OS.time,Censored_OS_NEW)~1,data=dat)
survfit(Surv(OS.time,1-Censored_OS_NEW)~1,data=dat)
930/365.5
dat3<- read.csv(file="~/Desktop/Data/Plots/DatawithPartDSAPFS.csv")
table(part2.PFSL)
table(dat3$part2.PFSL)
coxph(Surv(PFS.time,Censored_PFS_NEW)~part2.PFSL,
data=dat3)
help("relevel")
dat3$part2.PFSL<-relevel(dat3$part2.PFSL,ref="Part 2")
part.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~part2.PFSL,
data=dat3)
part.pfs
exp(1/1.089)
library(pec)
Models <- list("Cox.MGMT methyl vs. unmethyl"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.1,data=dat3,y=TRUE),
"Multivariate Cox"=coxph(Surv(PFS.time,Censored_PFS_NEW)~Age +MGMT.6,data=dat3,y=TRUE),
"Cox.Partitions"=coxph(Surv(PFS.time,Censored_PFS_NEW)~part2.PFSL,data=dat3,y=TRUE))
dat2<-dat2[which(!is.na(dat2$OS.time)),]
summary(age.os<-coxph(Surv(OS.time,Censored_OS_NEW)~Age,data=dat2))
summary(kps.os<-coxph(Surv(OS.time,Censored_OS_NEW)~KPS_cat,data=dat2))
summary(kps2.os<-coxph(Surv(OS.time,Censored_OS_NEW)~KPS_cat80,data=dat2))
summary(mgmt.os<-coxph(Surv(OS.time,Censored_OS_NEW)~MGMT.score,data=dat2))
summary(mgmt.cat.os<-coxph(Surv(OS.time,Censored_OS_NEW)~mgmt.score.cat,data=dat2))
dat$mgmt.score.cat2<-relevel(factor(dat$mgmt.score.cat),ref="Low 1-6")
summary(mgmt.cat2.os<-coxph(Surv(OS.time,Censored_OS_NEW)~mgmt.score.cat2,data=dat2))
summary(mgmt2.os<-coxph(Surv(OS.time,Censored_OS_NEW)~Methylation.status,data=dat2))
summary(gender.os<-coxph(Surv(OS.time,Censored_OS_NEW)~Gender,data=dat2))
summary(eor2.os<-coxph(Surv(OS.time,Censored_OS_NEW)~EOR2,data=dat2))
summary(eor3.os<-coxph(Surv(OS.time,Censored_OS_NEW)~EOR3,data=dat2))
summary(m1<-coxph(Surv(OS.time,Censored_OS_NEW)~Age + KPS_cat80 + MGMT.score  + Gender + EOR3 ,data=dat2))
summary(m1<-coxph(Surv(OS.time,Censored_OS_NEW)~Age + Gender + MGMT.score  +  EOR3 ,data=dat2))
summary(m1<-coxph(Surv(OS.time,Censored_OS_NEW)~Age +  MGMT.score  +  EOR3 ,data=dat2))
dat2<-dat[which(!is.na(dat$PFS.time)),]
dat2<-dat2[which(!is.na(dat2$OS.time)),]
summary(age.os<-coxph(Surv(OS.time,Censored_OS_NEW)~Age,data=dat2))
summary(kps.os<-coxph(Surv(OS.time,Censored_OS_NEW)~KPS_cat,data=dat2))
summary(gender.os<-coxph(Surv(OS.time,Censored_OS_NEW)~Gender,data=dat2))
dat3<- read.csv(file="~/Desktop/Data/Plots/DatawithPartDSAOS.csv")
part.pfs<-coxph(Surv(OS.time,Censored_OS_NEW)~part3.OSL,
data=dat3)
part.pfs
table(dat3$part3.OSL)
library(pec)
Models <- list("Cox.MGMT methyl vs. unmethyl"=coxph(Surv(OS.time,Censored_OS_NEW)~MGMT.1,data=dat3,y=TRUE),
"Multivariate Cox"=coxph(Surv(OS.time,Censored_OS_NEW)~Age +MGMT.6,data=dat3,y=TRUE),
"Cox.Partitions"=coxph(Surv(OS.time,Censored_OS_NEW)~part3.OSL,data=dat3,y=TRUE),
"Multivariate Cox.Partitions"=coxph(Surv(OS.time,Censored_OS_NEW)~part3.OSL+Age + EOR3 + KPS,data=dat3,y=TRUE)
)
PredError <- pec(object=Models,
formula=Surv(OS.time,Censored_OS_NEW)~1,
data=dat3,
exact=TRUE,
cens.model="marginal",
splitMethod="Cv10",
B=10,
verbose=FALSE)
plot(PredError,xlim=c(0,1500))
summary(mgmt.cat.pfs<-coxph(Surv(PFS.time,Censored_PFS_NEW)~mgmt.score.cat,data=dat))
dat$mgmt.score.cat2<-relevel(factor(dat$mgmt.score.cat),ref="0 Unmeth")
dat2<-dat[which(!is.na(dat$PFS.time)),]
m1<-(coxph(Surv(PFS.time,Censored_PFS_NEW)~Age + KPS_cat2 + mgmt.score.cat2
+ Gender + EOR2,data=dat2))
m1
m1<-(coxph(Surv(PFS.time,Censored_PFS_NEW)~Age + KPS_cat2 + mgmt.score.cat2
+  EOR2,data=dat2))
m1
m1<-(coxph(Surv(PFS.time,Censored_PFS_NEW)~Age + KPS_cat2 + mgmt.score.cat2
+  EOR3,data=dat2))
m1
m1<-(coxph(Surv(PFS.time,Censored_PFS_NEW)~Age + KPS_cat2 + mgmt.score.cat2
,data=dat2))
m1
m1<-(coxph(Surv(PFS.time,Censored_PFS_NEW)~Age +  mgmt.score.cat2
,data=dat2))
m1
dat2<-dat2[which(!is.na(dat2$OS.time)),]
m1<-(coxph(Surv(OS.time,Censored_OS_NEW)~Age + KPS_cat2 + mgmt.score.cat2
+ Gender + EOR3,data=dat2))
m1
m1<-(coxph(Surv(OS.time,Censored_OS_NEW)~Age + KPS_cat2 + mgmt.score.cat2
+ EOR3,data=dat2))
m1
m1<-(coxph(Surv(OS.time,Censored_OS_NEW)~Age +  mgmt.score.cat2
+ EOR3,data=dat2))
m1
dat2<-dat[which(!is.na(dat$PFS.time)),]
Models <- list("Cox.X1"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.1,data=dat2,y=TRUE),
"Cox.X2"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.2,data=dat2,y=TRUE),
"Cox.X3"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.3,data=dat2,y=TRUE),
"Cox.X4"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.4,data=dat2,y=TRUE),
"Cox.X5"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.5,data=dat2,y=TRUE),
"Cox.X6"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.6,data=dat2,y=TRUE),
"Cox.X7"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.7,data=dat2,y=TRUE),
"Cox.X8"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.8,data=dat2,y=TRUE),
"Cox.X9"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.9,data=dat2,y=TRUE),
"Cox.X10"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.10,data=dat2,y=TRUE),
"Cox.X11"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.11,data=dat2,y=TRUE),
"Cox.X12"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.12,data=dat2,y=TRUE),
"Cox.X13"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.13,data=dat2,y=TRUE),
"Cox.X14"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.14,data=dat2,y=TRUE),
"Cox.X15"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.15,data=dat2,y=TRUE),
"Cox.X16"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.16,data=dat2,y=TRUE),
"Cox.X17"=coxph(Surv(PFS.time,Censored_PFS_NEW)~MGMT.17,data=dat2,y=TRUE))
# compute the apparent prediction error
PredError <- pec(object=Models,
formula=Surv(PFS.time,Censored_PFS_NEW)~1,
data=dat2,
exact=TRUE,
cens.model="marginal",
splitMethod="Cv10",
B=10,
verbose=FALSE)
PredError
compdc.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_ErrorToTruth.txt")
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")[1:500,]
xy<-cbind(compdc.error,compthirds.error,compRob.CVerror,compRob.Error,compRob.errorU,compRob.error)
xy.500.uplim<-cbind(unlist(compdc.error.500.uplim),unlist(compthirds.error.500.uplim),unlist(compRob.CVerror.500.uplim),unlist(compRob.Error.500.uplim),unlist(compRob.errorU.500.uplim),unlist(compRob.error.500.uplim))
compthirds.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_ErrorToTruth.txt")
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
xy.500.uplim<-cbind(unlist(compdc.error.500.uplim),unlist(compthirds.error.500.uplim),unlist(compRob.CVerror.500.uplim),unlist(compRob.Error.500.uplim),unlist(compRob.errorU.500.uplim),unlist(compRob.error.500.uplim))
xy.500.uplim<-cbind(unlist(compdc.error.500.uplim),unlist(compthirds.error.500.uplim))#,unlist(compRob.CVerror.500.uplim),unlist(compRob.Error.500.uplim),unlist(compRob.errorU.500.uplim),unlist(compRob.error.500.uplim))
name.vec <- c("DC","Thirds")#,"R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(xy.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error.500.uplim)),as.vector(unlist(compthirds.error.500.uplim)))#,as.vector(unlist(compRob.CVerror.500.uplim)),as.vector(unlist(compRob.Error.500.uplim)),as.vector(unlist(compRob.errorU.500.uplim)),as.vector(unlist(compRob.error.500.uplim)),names=name.vec)
library(vioplot)
install.packages("vioplot")
library(vioplot)
setwd("/Users/annettemolinaro/Repository/Aim2/Sims")
compdc.error<-read.table("friedman1_CompositeDC_ErrorToTruth.txt")
compdc.error<-read.table("friedman1_CompositeDC_ErrorToTruth.txt")
setwd("/Users/annettemolinaro/Repository/Aim2/Sims")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/annettemolinaro/Repository/Aim2/Sims")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/annettemolinaro/Repository/Aim2/Sims")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/annettemolinaro/Repository/Aim2/Sims")
```
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")[1:500,]
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
compRob.CVerror.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.txt")
compRob.errorU.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.errorU.lambdas.txt")
compRob.Error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.ErrorOptimisim.Lambdas.txt")
compRob.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.error.lambdas.txt")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/annettemolinaro/Repository/Aim2/Sims")
library(vioplot)
compdc.error<-read.table("friedman1_CompositeDC_ErrorToTruth.txt")
compthirds.error<-read.table("friedman1_CompositeThirds_ErrorToTruth.txt")
compRob.CVerror<-read.table("friedman1_CompositeRob_ErrorToTruth.txt")
compRob.errorU<-read.table("friedman1_CompositeRob_ErrorToTruth.errorU.lambdas.txt")
compRob.Error<-read.table("friedman1_CompositeRob_ErrorToTruth.ErrorOptimisim.Lambdas.txt")
compRob.error<-read.table("friedman1_CompositeRob_ErrorToTruth.error.lambdas.txt")
compdc.error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_ErrorToTruth.txt")
compthirds.error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_ErrorToTruth.txt")
compRob.CVerror.500<-read.table("friedman1_500_CompositeRob_ErrorToTruth.txt")
compRob.errorU.500<-read.table("friedman1_500_CompositeRob_ErrorToTruth.errorU.lambdas.txt")
compRob.Error.500<-read.table("friedman1_500_CompositeRob_ErrorToTruth.ErrorOptimisim.Lambdas.txt")
compRob.error.500<-read.table("friedman1_500_CompositeRob_ErrorToTruth.error.lambdas.txt")
compdc.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_ErrorToTruth.txt")
compthirds.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_ErrorToTruth.txt")
compRob.CVerror.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.txt")
compRob.errorU.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.errorU.lambdas.txt")
compRob.Error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.ErrorOptimisim.Lambdas.txt")
compRob.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.error.lambdas.txt")
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")[1:500,]
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
compRob.CVerror.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.txt")
compRob.errorU.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.errorU.lambdas.txt")
compRob.Error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.ErrorOptimisim.Lambdas.txt")
compRob.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.error.lambdas.txt")
xy.500.uplim<-cbind(unlist(compdc.error.500.uplim),unlist(compthirds.error.500.uplim),unlist(compRob.CVerror.500.uplim),unlist(compRob.Error.500.uplim),unlist(compRob.errorU.500.uplim),unlist(compRob.error.500.uplim))
name.vec <- c("DC","Thirds","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(xy.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error.500.uplim)),as.vector(unlist(compthirds.error.500.uplim)),as.vector(unlist(compRob.CVerror.500.uplim)),as.vector(unlist(compRob.Error.500.uplim)),as.vector(unlist(compRob.errorU.500.uplim)),as.vector(unlist(compRob.error.500.uplim)),names=name.vec)
tabl <- cbind(summary(compdc.error.500.uplim),summary(compthirds.error.500.uplim),summary(compRob.CVerror.500.uplim),summary(compRob.Error.500.uplim),summary(compRob.errorU.500.uplim),summary(compRob.error.500.uplim))
colnames(tabl) <- name.vec
tabl
lambda.500.uplim<-cbind(unlist(compdc.error.500.uplim.lambda)[1:500],unlist(compthirds.error.500.uplim.lambda),unlist(compRob.CVerror.500.uplim.lambda),unlist(compRob.Error.500.uplim.lambda),unlist(compRob.errorU.500.uplim.lambda),unlist(compRob.error.500.uplim.lambda))
name.vec <- c("DC","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(lambda.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
dim(compdc.error.500.uplim.lambda)
length(compdc.error.500.uplim.lambda)
length(compthirds.error.500.uplim.lambda)
compthirds.error.500.uplim.lambda
compthirds.error.500.uplim.lambda
unlist(compthirds.error.500.uplim.lambda)
unlist(compRob.CVerror.500.uplim.lambda)
unlist(compRob.Error.500.uplim.lambda)
unlist(compRob.errorU.500.uplim.lambda)
unlist(compRob.error.500.uplim.lambda))
unlist(compRob.error.500.uplim.lambda)
dim(unlist(compRob.error.500.uplim.lambda))
length(unlist(compRob.error.500.uplim.lambda))
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")[1:500,]
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
compRob.CVerror.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.txt")
compRob.errorU.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.errorU.lambdas.txt")
compRob.Error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.ErrorOptimisim.Lambdas.txt")
compRob.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.error.lambdas.txt")
compdc.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_ErrorToTruth.txt")
compthirds.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_ErrorToTruth.txt")
compRob.CVerror.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.txt")
compRob.errorU.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.errorU.lambdas.txt")
compRob.Error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.ErrorOptimisim.Lambdas.txt")
compRob.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.error.lambdas.txt")
xy.500<-cbind(unlist(compdc.error.500)[1:966],unlist(compthirds.error.500)[1:966],unlist(compRob.CVerror.500),unlist(compRob.Error.500),unlist(compRob.errorU.500),unlist(compRob.error.500))
name.vec <- c("DC","Thirds","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(xy.500,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error.500)),as.vector(unlist(compthirds.error.500)),as.vector(unlist(compRob.CVerror.500)),as.vector(unlist(compRob.Error.500)),as.vector(unlist(compRob.errorU.500)),as.vector(unlist(compRob.error.500)),names=name.vec)
xy.500.uplim<-cbind(unlist(compdc.error.500.uplim),unlist(compthirds.error.500.uplim),unlist(compRob.CVerror.500.uplim),unlist(compRob.Error.500.uplim),unlist(compRob.errorU.500.uplim),unlist(compRob.error.500.uplim))
name.vec <- c("DC","Thirds","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(xy.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error.500.uplim)),as.vector(unlist(compthirds.error.500.uplim)),as.vector(unlist(compRob.CVerror.500.uplim)),as.vector(unlist(compRob.Error.500.uplim)),as.vector(unlist(compRob.errorU.500.uplim)),as.vector(unlist(compRob.error.500.uplim)),names=name.vec)
lambda.500.uplim<-cbind(unlist(compdc.error.500.uplim.lambda),unlist(compthirds.error.500.uplim.lambda),unlist(compRob.CVerror.500.uplim.lambda),unlist(compRob.Error.500.uplim.lambda),unlist(compRob.errorU.500.uplim.lambda),unlist(compRob.error.500.uplim.lambda))
name.vec <- c("DC","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(lambda.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
compdc.error.500.uplim.lambda
compthirds.error.500.uplim.lambda
compRob.CVerror.500.uplim.lambda
length(unlist(compRob.error.500.uplim.lambda))
unlist(compRob.error.500.uplim.lambda)[500:1000]
source("/Users/annettemolinaro/Repository/Aim2/IntegratingCodeAndText_postAMM.R")
model<-cmdArg(model="sim1")
tag <-cmdArg(tag="500")
n.training <- cmdArg(n.training=500L)
n.test <- cmdArg(n.test=1000L)
n.simulations <- cmdArg(n.simulations=500L)
name <- paste("data/",model,"_",tag,"_",sep="")
CompositeRob <- paste("CompositeRob/",model,"_",tag,"_",sep="")
idx
set.seed(idx)
training.data <- matrix(scan(paste(name,"training_data_",idx,".txt",sep="")),nrow=n.training,byrow=TRUE)
test.data <- matrix(scan(paste(name,"test_data_",idx,".txt",sep="")),nrow=n.test,byrow=TRUE)
training.y <- scan(paste(name,"training_y_",idx,".txt",sep=""))
test.y <- scan(paste(name,"test_y_",idx,".txt",sep=""))
training.truth <- scan(paste(name,"training_truth_",idx,".txt",sep=""))
test.truth <- scan(paste(name,"test_truth_",idx,".txt",sep=""))
training.data.all<-data.frame(cbind(training.data,training.y))
dimnames(training.data.all)[[2]]<-c("X1","X2","X3","X4","X5","X6","X7","X8","X9","training.y")
dimnames(test.data)[[2]]<-c("X1","X2","X3","X4","X5","X6","X7","X8","X9")
test.data<-as.data.frame(test.data)
system.time(Model<-composite.rpart.Grid(dat = training.data.all, n.grid =100, mult = 1,
uplim = 20, outvar = "training.y", prop.learning = 0.5))
lambda.num<-which(Model$CVError.lambdas==min(Model$CVError.lambdas))
MinErrorLambda<-Model$lambdas[lambda.num]
PredictedValuesCurrent<-predict(object=Model$fits[[lambda.num]],newdata=test.data)
ErrorToTruthCurrent<-(sum(( PredictedValuesCurrent - as.matrix(test.truth))^2))/n.test
MinErrorLambda
lambda.num
PredictedValuesCurrent
ErrorToTruthCurrent
library(vioplot)
compdc.error<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_CompositeDC_ErrorToTruth.txt")
compthirds.error<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_CompositeThirds_ErrorToTruth.txt")
compRob.CVerror<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_CompositeRob_ErrorToTruth.txt")
compRob.errorU<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_CompositeRob_ErrorToTruth.errorU.lambdas.txt")
compRob.Error<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_CompositeRob_ErrorToTruth.ErrorOptimisim.Lambdas.txt")
compRob.error<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_CompositeRob_ErrorToTruth.error.lambdas.txt")
compdc.error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_ErrorToTruth.txt")
compthirds.error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_ErrorToTruth.txt")
compRob.CVerror.500<-read.table("friedman1_500_CompositeRob_ErrorToTruth.txt")
compdc.error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_ErrorToTruth.txt")
compthirds.error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_ErrorToTruth.txt")
compRob.CVerror.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_ErrorToTruth.txt")
compRob.errorU.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_ErrorToTruth.errorU.lambdas.txt")
compRob.Error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_ErrorToTruth.ErrorOptimisim.Lambdas.txt")
compRob.error.500<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_ErrorToTruth.error.lambdas.txt")
compdc.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_ErrorToTruth.txt")
compthirds.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_ErrorToTruth.txt")
compRob.CVerror.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.txt")
compRob.errorU.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.errorU.lambdas.txt")
compRob.Error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.ErrorOptimisim.Lambdas.txt")
compRob.error.500.uplim<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_ErrorToTruth.error.lambdas.txt")
compdc.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeDC_Train500_uplim_MinErrorLambda.txt")[1:500,]
compthirds.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeThirds_500_uplim_MinErrorLambda.txt")
compRob.CVerror.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.txt")
compRob.errorU.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.errorU.lambdas.txt")
compRob.Error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.ErrorOptimisim.Lambdas.txt")
compRob.error.500.uplim.lambda<-read.table("/Users/annettemolinaro/Repository/Aim2/Sims/friedman1_500_CompositeRob_500_uplim_MinErrorLambda.error.lambdas.txt")
xy<-cbind(compdc.error,compthirds.error,compRob.CVerror,compRob.Error,compRob.errorU,compRob.error)
name.vec <- c("DC","Thirds","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(xy,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error)),as.vector(unlist(compthirds.error)),as.vector(unlist(compRob.CVerror)),as.vector(unlist(compRob.Error)),as.vector(unlist(compRob.errorU)),as.vector(unlist(compRob.error)),names=name.vec)
tabl <- cbind(summary(compdc.error),summary(compthirds.error),summary(compRob.CVerror),summary(compRob.Error),summary(compRob.errorU),summary(compRob.error))
colnames(tabl) <- name.vec
#write.table(tabl,"Friedman1_table.txt",sep="\t",row.names=TRUE,col.names=TRUE,quote=FALSE)
tabl
xy.500<-cbind(unlist(compdc.error.500)[1:966],unlist(compthirds.error.500)[1:966],unlist(compRob.CVerror.500),unlist(compRob.Error.500),unlist(compRob.errorU.500),unlist(compRob.error.500))
name.vec <- c("DC","Thirds","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(xy.500,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error.500)),as.vector(unlist(compthirds.error.500)),as.vector(unlist(compRob.CVerror.500)),as.vector(unlist(compRob.Error.500)),as.vector(unlist(compRob.errorU.500)),as.vector(unlist(compRob.error.500)),names=name.vec)
tabl <- cbind(summary(compdc.error.500),summary(compthirds.error.500),summary(compRob.CVerror.500),summary(compRob.Error.500),summary(compRob.errorU.500),summary(compRob.error.500))
colnames(tabl) <- name.vec
#write.table(tabl,"Friedman1_table.txt",sep="\t",row.names=TRUE,col.names=TRUE,quote=FALSE)
tabl
xy.500.uplim<-cbind(unlist(compdc.error.500.uplim),unlist(compthirds.error.500.uplim),unlist(compRob.CVerror.500.uplim),unlist(compRob.Error.500.uplim),unlist(compRob.errorU.500.uplim),unlist(compRob.error.500.uplim))
name.vec <- c("DC","Thirds","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(xy.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error.500.uplim)),as.vector(unlist(compthirds.error.500.uplim)),as.vector(unlist(compRob.CVerror.500.uplim)),as.vector(unlist(compRob.Error.500.uplim)),as.vector(unlist(compRob.errorU.500.uplim)),as.vector(unlist(compRob.error.500.uplim)),names=name.vec)
tabl <- cbind(summary(compdc.error.500.uplim),summary(compthirds.error.500.uplim),summary(compRob.CVerror.500.uplim),summary(compRob.Error.500.uplim),summary(compRob.errorU.500.uplim),summary(compRob.error.500.uplim))
colnames(tabl) <- name.vec
#write.table(tabl,"Friedman1_table.txt",sep="\t",row.names=TRUE,col.names=TRUE,quote=FALSE)
tabl
lambda.500.uplim<-cbind(unlist(compdc.error.500.uplim.lambda),unlist(compthirds.error.500.uplim.lambda),unlist(compRob.CVerror.500.uplim.lambda),unlist(compRob.Error.500.uplim.lambda),unlist(compRob.errorU.500.uplim.lambda),unlist(compRob.error.500.uplim.lambda))
name.vec <- c("DC","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(lambda.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
lambda.500.uplim<-cbind(unlist(compdc.error.500.uplim.lambda),unlist(compthirds.error.500.uplim.lambda),unlist(compRob.CVerror.500.uplim.lambda),unlist(compRob.Error.500.uplim.lambda),unlist(compRob.errorU.500.uplim.lambda),unlist(compRob.error.500.uplim.lambda))
lambda.500.uplim
name.vec <- c("DC","Thirds","R_CV","R_OpErr","R_AppRes","R_AppCI")
boxplot(lambda.500.uplim,names=name.vec,ylab="Average Squared Error",main="Friedman 1")
vioplot(as.vector(unlist(compdc.error.500.uplim.lambda)),as.vector(unlist(compthirds.error.500.uplim.lambda)),as.vector(unlist(compRob.CVerror.500.uplim.lambda)),as.vector(unlist(compRob.Error.500.uplim.lambda)),as.vector(unlist(compRob.errorU.500.uplim.lambda)),as.vector(unlist(compRob.error.500.uplim.lambda)),names=name.vec)
tabl <- cbind(summary(compdc.error.500.uplim.lambda),summary(compthirds.error.500.uplim.lambda),summary(compRob.CVerror.500.uplim.lambda),summary(compRob.Error.500.uplim.lambda),summary(compRob.errorU.500.uplim.lambda),summary(compRob.error.500.uplim.lambda))
colnames(tabl) <- name.vec
#write.table(tabl,"Friedman1_table.txt",sep="\t",row.names=TRUE,col.names=TRUE,quote=FALSE)
tabl
