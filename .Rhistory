install.packages("formatR")
library(formatR)
setwd("~/Repository/Aim2")
tidy_eval("componly-aim2-3-14-17.R")
install.packages("randomForest")
install.packages("rpart.plot")
install.packages("logspline")
tidy_eval("componly-aim2-3-14-17.R")
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("devtools")
load(devtools)
devtools::install_github("rstudio/addinexamples", type = "source")
addinexamples:::reformatAddin()
addinexamples:::reformatAddin()
source('~/Repository/Aim2/IntegratingCodeAndText_postAMM.R')
set.seed(12345)
housing.data <- as.data.frame(matrix(scan("housing.data"),nrow=506,byrow=TRUE))
colnames(housing.data) <- c("crim","zn","indus","chas","nox","rm","age","dis","rad",
"tax","ptratiob","b","lstat","mdev")
temp <- composite.rpart(dat=housing.data,n.grid=20,outvar="mdev")
source('~/Repository/Aim2/IntegratingCodeAndText_postAMM.R')
source('~/Repository/Aim2/IntegratingCodeAndText_postAMM.R')
plot(temp$lambdas,temp$Error.lambdas,xlab="lambda",ylab="Optimism corrected error",
main="DC Code: Optimism corrected error vs. lambda for housing data")
source('~/Repository/Aim2/IntegratingCodeAndText_postAMM.R')
temp2 <- composite.rpart.thirds(dat=housing.data,n.grid=20,mult=2,outvar="mdev")
plot(temp$lambdas,temp$Error.lambdas,xlab="lambda",ylab="Optimism corrected error",
main="Thirds: Optimism corrected error vs. lambda for housing data")
plot(temp2$lambdas,temp2$Error.lambdas,xlab="lambda",ylab="Optimism corrected error",
main="Thirds: Optimism corrected error vs. lambda for housing data")
temp3 <- composite.rpart.Grid(dat = housing.data, n.grid = 20, mult = 1,
uplim = 20, outvar = "mdev", prop.learning = 0.5)
source('~/Repository/Aim2/IntegratingCodeAndText_postAMM.R')
temp3 <- composite.rpart.Grid(dat = housing.data, n.grid = 20, mult = 1,
uplim = 20, outvar = "mdev", prop.learning = 0.5)
par(mfrow = c(2, 2))
plot(temp3$lambdas, temp3$errorU.lambdas, xlab = "lambda",
ylab = "apparent error", main = "apparent errorU (orig response) vs. lambda")
plot(temp3$lambdas, temp3$Error.lambdas, xlab = "lambda", ylab = "Corrected error",
main = "op-corr apparent errorU vs. lambda")
plot(temp3$lambdas, temp3$error.lambdas, xlab = "lambda", ylab = "apparent error",
main = "apparent error vs. lambda")
plot(temp3$lambdas, temp3$CVError.lambdas, xlab = "lambda",
ylab = "CV error", main = "CV-based error vs. lambda")
q()
